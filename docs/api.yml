openapi: 3.0.1

info:
    title: Tom's Data API
    description: API Endpoints and methods available
    version: 0.3.0

servers:
    - url: https://api.tomsdata.no Main
    - url: https://tomsdata.herokuapp.com Fallback

tags:
    - name: user
      description: API endpoints for /users
    - name: blog
      description: API endpoints for /blogs

paths:
    /users:
        get:
            tags:
                - user
            summary: Get all users as JSON
            operationId: getUsers
            responses:
                200:
                    description: OK
        post:
            tags:
                - user
            summary: Add a new user
            operationId: addUser
            requestBody:
                description: User object required
                content:
                    JSON:
                        schema:
                            $ref: "#/components/schemas/User"
                required: true
            responses:
                200:
                    description: OK
                400:
                    description: Failed verification
    /users/{id}:
        get:
            tags:
                - user
            summary: Get user by id
            description: Gets the specified user by id
            operationId: getUser
            parameters:
                - name: id
                  in: path
                  description: The id of the user
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                404:
                    description: User with the given id was not found
        put:
            tags:
                - user
            summary: Update user by id
            description: Changes details about the current user. Can only be done to the currently logged in user
            operationId: updateUser
            parameters:
                - name: id
                  in: path
                  description: The id of the user
                  required: true
                  schema:
                      type: string
            requestBody:
                description: The updated user object
                content:
                    JSON:
                        schema:
                            $ref: "#/components/schemas/User"
                required: true
            responses:
                400:
                    description: User object incomplete
                404:
                    description: User not found
        delete:
            tags:
                - user
            summary: Delete user by id
            description: This can only be done by the logged in user.
            operationId: deleteUser
            parameters:
                - name: id
                  in: path
                  description: The name that needs to be deleted
                  required: true
                  schema:
                      type: string
            responses:
                410:
                    description: Deleted
                404:
                    description: User not found

    /users/asCSV:
        get:
            tags:
                - user
            summary: Get all users as CSV
            operationId: getAllAsCSV

            responses:
                200:
                    description: OK

    /users/avatar:
        post:
            tags:
                - user
            summary: Upload an avatar
            operationId: uploadAvatar
            description: Upload an image as multipart/form-data using the key `avatar`
            requestBody:
                content:
                    mutlipart/form-data:
                        schema:
                            type: object
                            properties:
                                avatar:
                                    type: object
                                    description: The selected image
                required: true

            responses:
                200:
                    description: OK
                400:
                    description: Failed verification

components:
    schemas:
        User:
            type: object
            properties:
                userName:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                email:
                    type: string
                password:
                    type: string

        Blog:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                petId:
                    type: integer
                    format: int64
                quantity:
                    type: integer
                    format: int32
                shipDate:
                    type: string
                    format: date-time
                status:
                    type: string
                    description: Order Status
                    enum:
                        - placed
                        - approved
                        - delivered
                complete:
                    type: boolean
                    default: false
